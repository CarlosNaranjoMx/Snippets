{
	// Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Comentario Multilinea con Asterisco": {
		"prefix": "comast",
		"body": [
			"/* $1 */"
		]
	},

	"Class": {
		"prefix": "class", 
		"body": [
		"public class $1{",
		"	$2",
		"}"
		]
	},

	"Start con Constructor": {
		"prefix": "start", 
		"body": [
		" /** @author Naranjo Robledo Carlos */ ",
		"public class $1{",
		"	/**",
		"	 * $4",
		"	 */",
		"	$1(){",
		"		$2"
		"	}",
		"	$3",
		"}"
		]
	},

	"Main": {
		"prefix": "main" 
		"body": [
		"public static void main(String[] args){",
			"$1",
		"}"
		]
	},

	"Acute": {
		"prefix": "acute" 
		"body": [
		"&$1acute;$2"
		]
	},

	"Java Doc": {
		"prefix": "doc" 
		"body": [
		"/**",
		" * $1",
		" */"
		]
	},

	"Print": {
		"prefix": "print" 
		"body": [
		"System.out.println($1);"
		]
	},

	"Print sin espacios": {
		"prefix": "print2" 
		"body": [
		"System.out.print($1);"
		]
	},"Map": {
		"prefix": "map", 
		"body": [
		"Map<${1:tipo}> ${2:nombre} = new HashMap<>();"
		]
	},"Exception": {
		"prefix": "ilegalargument", 
		"body": [
		"throw new IllegalArgumentException(\"$1\");"
		]
	},"Map": {
		"prefix": "containsKey", 
		"body": [
		"${1:nombre}.containsKey(${2:llave})"
		]
	}

}