{
	//***************(Comentarios)***************//
	"Comentario Multilinea con Asterisco": {
		"prefix": "comast",
		"body": [
			"/* $1 */"
		]
	}
	,"Acute": {
		"prefix": "acute",
		"body": [
		"&$1acute;$2"
		]
	}
	,"Java Doc": {
		"prefix": "doc", 
		"body": [
		"/**",
		" * $1",
		" */"
		]
	}
	//***************(Clases)***************//
	,"Class": {
		"prefix": "class", 
		"body": [
		"public class $1{ \n  $2\n}"
		]
	},

	"Start con Constructor": {
		"prefix": "start", 
		"body": [
		" \/** @author Naranjo Robledo Carlos *\/ \r\npublic class {\r\n    \/**\r\n     * $4\r\n     *\/\r\n    $1(){\r\n        $2\r\n    }$3\r\n    \r\n}"
		]
	},

	"Main": {
		"prefix": "main", 
		"body": [
		"public static void main(String[] args){",
			"$1",
		"}"
		]
	}
	//***************(Prints)***************//
	,"Print": {
		"prefix": "print", 
		"body": [
		"System.out.println($1);"
		]
	}
	,"Print sin espacios": {
		"prefix": "print2", 
		"body": [
		"System.out.print($1);"
		]
	}
	//***************(Excepciones)***************//
	,"Exception": {
		"prefix": "ilegalargument", 
		"body": [
			"throw new IllegalArgumentException(\"$1\");"
		]
	}
	//***************(Mapas)***************//
	,"Mapa": {
		"prefix": "map", 
		"body": [
		"Map<${1:tipo}> ${2:nombre} = new HashMap<>();"
		]
	}
	,"Map": {
		"prefix": "containsKey", 
		"body": [
		"${1:nombre}.containsKey(${2:llave})"
		]
	}
	//***************(Hilos)***************//
	,"Runnable": {
		"prefix": "runnable", 
		"body": [
		"\/**\r\n * $1\r\n *\/\r\npublic class $1 implements Runnable{\r\n    \r\n    @Override\r\n    public void run() {\r\n\r\n    }\r\n   \r\n}"
		]
	}
}